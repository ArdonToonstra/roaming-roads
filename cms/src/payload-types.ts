/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    trips: Trip;
    countries: Country;
    accommodations: Accommodation;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    trips: TripsSelect<false> | TripsSelect<true>;
    countries: CountriesSelect<false> | CountriesSelect<true>;
    accommodations: AccommodationsSelect<false> | AccommodationsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Alternative text for accessibility and SEO (describe what's in the image)
   */
  alt: string;
  /**
   * Optional caption to display with the media
   */
  caption?: string | null;
  location?: {
    /**
     * Country where this media was captured
     */
    country?: (number | null) | Country;
    /**
     * Name of the place (e.g., "Issyk-Kul Lake, Kyrgyzstan")
     */
    locationName?: string | null;
    /**
     * Where this photo/video was taken
     *
     * @minItems 2
     * @maxItems 2
     */
    gps?: [number, number] | null;
  };
  /**
   * Trip this media is associated with
   */
  relatedTrip?: (number | null) | Trip;
  /**
   * Type of media content
   */
  mediaType?: ('photo' | 'video' | 'audio' | 'document') | null;
  photographyInfo?: {
    /**
     * Camera model used
     */
    camera?: string | null;
    /**
     * Lens used for the photo
     */
    lens?: string | null;
    settings?: {
      aperture?: string | null;
      shutterSpeed?: string | null;
      iso?: number | null;
      focalLength?: number | null;
    };
  };
  usage?: {
    /**
     * Name of the photographer (if not you)
     */
    photographer?: string | null;
    licenseType?: ('own' | 'cc' | 'stock' | 'permission' | 'fair-use') | null;
    /**
     * Attribution text if required
     */
    attribution?: string | null;
  };
  seo?: {
    /**
     * Title for search engines (if different from alt text)
     */
    title?: string | null;
    /**
     * Keywords for better searchability
     */
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Mark as featured media for homepage or special collections
   */
  featured?: boolean | null;
  /**
   * Tags for organization and filtering (e.g., "sunset", "mountain", "street-food")
   */
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "countries".
 */
export interface Country {
  id: number;
  /**
   * Official country name
   */
  name: string;
  /**
   * ISO 3166-1 alpha-3 country code (e.g., USA, GBR, KGZ)
   */
  countryCode: string;
  /**
   * Official capital city name
   */
  capital: string;
  /**
   * ISO 4217 currency code (e.g., USD, EUR, KGS)
   */
  currency: string;
  /**
   * Full currency name (e.g., US Dollar, Euro, Kyrgyzstani Som)
   */
  currencyName?: string | null;
  /**
   * List of official languages
   */
  officialLanguages?:
    | {
        language: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Primary or most practiced religion in the country
   */
  mainReligion?:
    | ('christianity' | 'islam' | 'judaism' | 'hinduism' | 'buddhism' | 'sikhism' | 'secular' | 'mixed' | 'other')
    | null;
  /**
   * Percentage of population practicing the main religion
   */
  mainReligionPercentage?: number | null;
  /**
   * General visa requirements and travel information
   */
  visaRequirements?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * General safety assessment for travelers
   */
  safetyLevel?: ('very_safe' | 'safe' | 'moderate' | 'caution' | 'high_risk') | null;
  /**
   * Select the recommended months to visit this country
   */
  bestTimeToVisit?:
    | (
        | 'january'
        | 'february'
        | 'march'
        | 'april'
        | 'may'
        | 'june'
        | 'july'
        | 'august'
        | 'september'
        | 'october'
        | 'november'
        | 'december'
      )[]
    | null;
  /**
   * Important emergency contact numbers
   */
  emergencyNumbers?: {
    police?: string | null;
    medical?: string | null;
    fire?: string | null;
    tourist?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trips".
 */
export interface Trip {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title (e.g., "kyrgyzstan-adventure")
   */
  slug?: string | null;
  status?: ('draft' | 'published') | null;
  coverImage: number | Media;
  /**
   * Select 3-10 key images that represent the best moments of this trip
   */
  highlightsMedia?:
    | {
        media: number | Media;
        /**
         * Brief description of why this is a trip highlight
         */
        caption?: string | null;
        order?: number | null;
        id?: string | null;
      }[]
    | null;
  description?: string | null;
  country: number | Country;
  /**
   * Track which regions/provinces you visited within the country for better geographic organization
   */
  regionsVisited?:
    | {
        /**
         * e.g., "Issyk-Kul Region", "Naryn Province", "Chuy Oblast"
         */
        regionName: string;
        regionType?:
          | ('province' | 'region' | 'oblast' | 'state' | 'territory' | 'county' | 'district' | 'other')
          | null;
        /**
         * Key attractions, activities, or experiences in this region
         */
        highlights?: string | null;
        id?: string | null;
      }[]
    | null;
  period?: string | null;
  budget?: {
    amount?: number | null;
    currency?: string | null;
    perPerson?: boolean | null;
  };
  activities?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Highlight up to 5 key accommodations used during this trip
   */
  featuredAccommodations?:
    | {
        accommodation: number | Accommodation;
        id?: string | null;
      }[]
    | null;
  itinerary?:
    | (
        | {
            time?: string | null;
            locationName: string;
            /**
             * @minItems 2
             * @maxItems 2
             */
            location?: [number, number] | null;
            /**
             * Which region/province this location is in (e.g., "Issyk-Kul Region", "Naryn Province")
             */
            regionProvince?: string | null;
            description?: string | null;
            activities?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            accommodation?: (number | null) | Accommodation;
            transportation?: {
              arrivalMethod?:
                | (
                    | 'walking'
                    | 'rental_car'
                    | 'public_bus'
                    | 'taxi'
                    | 'train'
                    | 'flight'
                    | 'boat'
                    | 'bicycle'
                    | 'hitchhiking'
                    | 'tour_bus'
                    | 'other'
                  )
                | null;
              departureMethod?:
                | (
                    | 'walking'
                    | 'rental_car'
                    | 'public_bus'
                    | 'taxi'
                    | 'train'
                    | 'flight'
                    | 'boat'
                    | 'bicycle'
                    | 'hitchhiking'
                    | 'tour_bus'
                    | 'other'
                  )
                | null;
              travelTime?: {
                value?: number | null;
                unit?: ('minutes' | 'hours' | 'days') | null;
              };
              distance?: {
                value?: number | null;
                unit?: ('km' | 'mi') | null;
              };
              /**
               * Tips, costs, booking info, etc.
               */
              transportationNotes?: string | null;
            };
            gallery?:
              | {
                  media: number | Media;
                  caption?: string | null;
                  isHighlight?: boolean | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'fullDay';
          }
        | {
            locationName: string;
            description?: string | null;
            activities?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            /**
             * @minItems 2
             * @maxItems 2
             */
            location?: [number, number] | null;
            /**
             * Which region/province this waypoint is in (e.g., "Issyk-Kul Region", "Naryn Province")
             */
            regionProvince?: string | null;
            gallery?:
              | {
                  media: number | Media;
                  caption?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'waypoint';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accommodations".
 */
export interface Accommodation {
  id: number;
  /**
   * Full name of the accommodation
   */
  name: string;
  /**
   * Type of accommodation
   */
  type:
    | 'hotel'
    | 'hostel'
    | 'camping'
    | 'guesthouse'
    | 'resort'
    | 'apartment'
    | 'yurt'
    | 'wild_camping'
    | 'homestay'
    | 'ecolodge'
    | 'other';
  /**
   * Detailed description of the accommodation, amenities, and unique features
   */
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Exact location coordinates
   *
   * @minItems 2
   * @maxItems 2
   */
  location?: [number, number] | null;
  /**
   * Full address information
   */
  address: {
    street?: string | null;
    city?: string | null;
    region?: string | null;
    postalCode?: string | null;
    /**
     * Select the country where this accommodation is located
     */
    country: number | Country;
  };
  contact?: {
    /**
     * Official website URL
     */
    website?: string | null;
    /**
     * Primary phone number with country code
     */
    phone?: string | null;
    /**
     * Contact email address
     */
    email?: string | null;
  };
  /**
   * General price category for this accommodation
   */
  priceRange?: ('budget' | 'midrange' | 'luxury' | 'ultra_luxury') | null;
  quality?: {
    /**
     * Our star rating or equivalent
     */
    starRating?: ('1' | '2' | '3' | '4' | '5' | 'unrated') | null;
    cleanliness?: ('excellent' | 'very_good' | 'good' | 'fair' | 'poor') | null;
    service?: ('excellent' | 'very_good' | 'good' | 'fair' | 'poor') | null;
  };
  /**
   * Available amenities and services
   */
  amenities?:
    | {
        amenity?:
          | (
              | 'wifi'
              | 'parking'
              | 'restaurant'
              | 'bar'
              | 'pool'
              | 'spa'
              | 'gym'
              | 'laundry'
              | 'kitchen'
              | 'ac'
              | 'heating'
              | 'hot_water'
              | 'breakfast'
              | 'pet_friendly'
              | 'family_friendly'
              | 'accessible'
              | 'luggage_storage'
              | 'tour_desk'
              | 'other'
            )
          | null;
        /**
         * Additional details about this amenity
         */
        notes?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Types of travelers this accommodation is best suited for
   */
  suitableFor?:
    | {
        travelerType:
          | 'solo'
          | 'couples'
          | 'families'
          | 'groups'
          | 'backpackers'
          | 'business'
          | 'adventure'
          | 'digital_nomads';
        id?: string | null;
      }[]
    | null;
  personalNotes?: {
    /**
     * When you stayed at this accommodation
     */
    stayDate?: string | null;
    /**
     * Would you recommend this accommodation to others?
     */
    wouldRecommend?: boolean | null;
    /**
     * What you liked most about this place
     */
    highlights?: string | null;
    /**
     * Any issues or things to be aware of
     */
    drawbacks?: string | null;
    /**
     * Helpful tips for future guests
     */
    tips?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'trips';
        value: number | Trip;
      } | null)
    | ({
        relationTo: 'countries';
        value: number | Country;
      } | null)
    | ({
        relationTo: 'accommodations';
        value: number | Accommodation;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  location?:
    | T
    | {
        country?: T;
        locationName?: T;
        gps?: T;
      };
  relatedTrip?: T;
  mediaType?: T;
  photographyInfo?:
    | T
    | {
        camera?: T;
        lens?: T;
        settings?:
          | T
          | {
              aperture?: T;
              shutterSpeed?: T;
              iso?: T;
              focalLength?: T;
            };
      };
  usage?:
    | T
    | {
        photographer?: T;
        licenseType?: T;
        attribution?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
      };
  featured?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        hero?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trips_select".
 */
export interface TripsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  status?: T;
  coverImage?: T;
  highlightsMedia?:
    | T
    | {
        media?: T;
        caption?: T;
        order?: T;
        id?: T;
      };
  description?: T;
  country?: T;
  regionsVisited?:
    | T
    | {
        regionName?: T;
        regionType?: T;
        highlights?: T;
        id?: T;
      };
  period?: T;
  budget?:
    | T
    | {
        amount?: T;
        currency?: T;
        perPerson?: T;
      };
  activities?: T;
  featuredAccommodations?:
    | T
    | {
        accommodation?: T;
        id?: T;
      };
  itinerary?:
    | T
    | {
        fullDay?:
          | T
          | {
              time?: T;
              locationName?: T;
              location?: T;
              regionProvince?: T;
              description?: T;
              activities?: T;
              accommodation?: T;
              transportation?:
                | T
                | {
                    arrivalMethod?: T;
                    departureMethod?: T;
                    travelTime?:
                      | T
                      | {
                          value?: T;
                          unit?: T;
                        };
                    distance?:
                      | T
                      | {
                          value?: T;
                          unit?: T;
                        };
                    transportationNotes?: T;
                  };
              gallery?:
                | T
                | {
                    media?: T;
                    caption?: T;
                    isHighlight?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        waypoint?:
          | T
          | {
              locationName?: T;
              description?: T;
              activities?: T;
              location?: T;
              regionProvince?: T;
              gallery?:
                | T
                | {
                    media?: T;
                    caption?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "countries_select".
 */
export interface CountriesSelect<T extends boolean = true> {
  name?: T;
  countryCode?: T;
  capital?: T;
  currency?: T;
  currencyName?: T;
  officialLanguages?:
    | T
    | {
        language?: T;
        id?: T;
      };
  mainReligion?: T;
  mainReligionPercentage?: T;
  visaRequirements?: T;
  safetyLevel?: T;
  bestTimeToVisit?: T;
  emergencyNumbers?:
    | T
    | {
        police?: T;
        medical?: T;
        fire?: T;
        tourist?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accommodations_select".
 */
export interface AccommodationsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  description?: T;
  location?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        region?: T;
        postalCode?: T;
        country?: T;
      };
  contact?:
    | T
    | {
        website?: T;
        phone?: T;
        email?: T;
      };
  priceRange?: T;
  quality?:
    | T
    | {
        starRating?: T;
        cleanliness?: T;
        service?: T;
      };
  amenities?:
    | T
    | {
        amenity?: T;
        notes?: T;
        id?: T;
      };
  suitableFor?:
    | T
    | {
        travelerType?: T;
        id?: T;
      };
  personalNotes?:
    | T
    | {
        stayDate?: T;
        wouldRecommend?: T;
        highlights?: T;
        drawbacks?: T;
        tips?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
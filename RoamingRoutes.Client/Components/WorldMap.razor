@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@implements IDisposable

<div id="world-map" style="height: 600px; width: 100%;" class="rounded-lg shadow-md bg-gray-200"></div>

@code {
    private DotNetObjectReference<WorldMap>? objRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                objRef = DotNetObjectReference.Create(this);
                await JSRuntime.InvokeVoidAsync("roamingRoutesWorldMap.initialize", "world-map", objRef);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"WorldMap: Error calling JavaScript: {ex.Message}");
            }
        }
    }

    [JSInvokable]
    public void NavigateToTrip(string urlKey)
    {
        NavigationManager.NavigateTo($"/trip/{urlKey}");
    }

    public void Dispose()
    {
        try
        {
            JSRuntime.InvokeVoidAsync("roamingRoutesWorldMap.destroy");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error destroying WorldMap: {ex.Message}");
        }
        
        objRef?.Dispose();
    }
}
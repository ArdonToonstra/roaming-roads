@page "/"
@page "/trips"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@inject HttpClient Http
@using RoamingRoutes.Shared.Models

<PageTitle>Roaming Routes - Charting Our Adventures</PageTitle>

<!-- Hero Section -->
<div class="hero-bg text-white">
    <div class="bg-black bg-opacity-40 min-h-[60vh] flex items-center justify-center">
        <div class="text-center px-4">
            <h1 class="text-5xl md:text-7xl font-bold mb-4">Charting Our Adventures</h1>
            <p class="text-lg md:text-xl max-w-2xl mx-auto">Follow our journey across the globe, one route at a time. Your guide to authentic, self-planned travel.</p>
        </div>
    </div>
</div>

<!-- Recent Trips Section -->
<div class="container mx-auto px-6 py-16">
    <h2 class="text-4xl font-bold text-center mb-12">Our Journeys</h2>
    @if (trips == null)
    {
        <p class="text-center"><em>Loading trips...</em></p>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            @foreach (var trip in trips)
            {
                <a href="/trip/@trip.UrlKey" class="block bg-white rounded-lg shadow-lg overflow-hidden transition transform hover:-translate-y-1 hover:shadow-xl">
                    <img src="@(trip.HeaderImageUrl ?? $"https://placehold.co/600x400/8e44ad/ffffff?text={System.Net.WebUtility.UrlEncode(trip.Country)}&font=poppins")" alt="Header image for @trip.Title" class="w-full h-56 object-cover">
                    <div class="p-6">
                        <span class="text-sm text-gray-500">@trip.StartDate.ToString("MMMM yyyy")</span>
                        <h3 class="text-2xl font-semibold my-2">@trip.Title</h3>
                        <p class="text-gray-600 mb-4 line-clamp-3">@trip.Description</p>
                        <span class="text-orange-600 font-semibold">Read More &rarr;</span>
                    </div>
                </a>
            }
        </div>
    }
</div>

@code {
    private Trip[]? trips;

    protected override async Task OnInitializedAsync()
    {
        trips = await Http.GetFromJsonAsync<Trip[]>("api/trips");
    }
}